pipeline {
    agent any

    environment {
        DOCKER_IMAGE = 'name_docker_image:latest'
        K8S_NAMESPACE = 'default'
        DOCKER_REGISTRY = 'your-docker-registry-url'
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    docker.build("$DOCKER_IMAGE")
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    docker.withRegistry("https://$DOCKER_REGISTRY", 'docker-hub-credentials') {
                        docker.image("$DOCKER_IMAGE").push()
                    }
                }
            }
        }

        stage('Set Kubernetes Context') {
            steps {
                sh "kubectl config use-context minikube"
            }
        }

        stage('Deploy to Minikube') {
            steps {
                sh "kubectl apply -f k8s/deployment.yaml"
                sh "kubectl apply -f k8s/service.yaml"
                // ... outros arquivos k8s conforme necess√°rio
            }
        }

        stage('Clean Up') {
            steps {
                sh "docker rmi $DOCKER_IMAGE"
            }
        }
    }
}
